{"version":3,"sources":["components/pages/NotFound.js","Context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/Header.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/pages/About.js","App.js","serviceWorker.js","index.js"],"names":["NotFound","react_default","a","createElement","className","Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","delete","onEditClick","_this2","_this$props$contact","name","email","phone","onClick","style","cursor","bind","color","float","Link","to","marginRight","Contacts","Fragment","contacts_Contact","Header","branding","defaultProps","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","AddContact","errors","e","defineProperty","target","onSubmit","_this$state","newContact","preventDefault","abrupt","post","history","push","_this$state2","layout_TextInputGroup","EditContact","updatedContact","match","params","put","About","App","Context_Provider","BrowserRouter","basename","process","layout_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e94f5710.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">\r\n        <span className=\"text-danger\">404</span> Page Not Found\r\n      </h1>\r\n      <p className=\"lead\">Sorry, this page doesn't exist</p>\r\n    </div>\r\n  );\r\n};\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'DELETE_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          contact => contact.id !== action.payload\r\n        )\r\n      };\r\n    case 'ADD_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts]\r\n      };\r\n    case 'UPDATE_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map(\r\n          contact =>\r\n            contact.id === action.payload.id\r\n              ? (contact = action.payload)\r\n              : contact\r\n        )\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    contacts: [],\r\n    dispatch: action => this.setState(state => reducer(state, action))\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const res = await axios.get('https://jsonplaceholder.typicode.com/users');\r\n    this.setState(() => ({\r\n      contacts: res.data\r\n    }));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { Consumer } from '../../Context';\r\nimport axios from 'axios';\r\n\r\nclass Contact extends Component {\r\n  state = {\r\n    showContactInfo: false\r\n  };\r\n\r\n  onDeleteClick = async (id, dispatch) => {\r\n    await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n    dispatch({ type: 'DELETE_CONTACT', payload: id });\r\n  };\r\n\r\n  onEditClick = () => {};\r\n\r\n  render() {\r\n    const { showContactInfo } = this.state;\r\n    const { name, email, phone, id } = this.props.contact;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body mb-3\">\r\n              <h4>\r\n                {name}{' '}\r\n                <i\r\n                  onClick={() =>\r\n                    this.setState({ showContactInfo: !showContactInfo })\r\n                  }\r\n                  className=\"fas fa-sort-down\"\r\n                  style={{ cursor: 'pointer' }}\r\n                />\r\n                <i\r\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\r\n                  className=\"fas fa-times\"\r\n                  style={{ cursor: 'pointer', color: 'red', float: 'right' }}\r\n                />\r\n                <Link to={`contact/edit/${id}`}>\r\n                  <i\r\n                    className=\"fas fa-pencil-alt\"\r\n                    style={{\r\n                      cursor: 'pointer',\r\n                      color: 'green',\r\n                      float: 'right',\r\n                      marginRight: '1rem'\r\n                    }}\r\n                  />\r\n                </Link>\r\n              </h4>\r\n              {showContactInfo && (\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">Email: {email}</li>\r\n                  <li className=\"list-group-item\">Phone: {phone}</li>\r\n                </ul>\r\n              )}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Contact;\r\n","import React, { Component } from 'react';\r\nimport Contact from './Contact';\r\nimport { Consumer } from '../../Context';\r\n\r\nclass Contacts extends Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { contacts } = value;\r\n          return (\r\n            <React.Fragment>\r\n              <h1 className=\"display-4 mb-2\">\r\n                <span className=\"text-danger\">Contact</span> List\r\n              </h1>\r\n              {contacts.map(contact => (\r\n                <Contact key={contact.id} contact={contact} />\r\n              ))}\r\n            </React.Fragment>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contacts;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header = props => {\r\n  const { branding } = props;\r\n\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n      <div className=\"container\">\r\n        <Link to=\"/\" className=\"navbar-brand\">\r\n          {branding}\r\n        </Link>\r\n        <div>\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-link\">\r\n                <i className=\"fas fa-home\" />\r\n                Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/contact/add\" className=\"nav-link\">\r\n                <i className=\"fas fa-plus\" />\r\n                Add\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/about\" className=\"nav-link\">\r\n                <i className=\"fas fa-question \" />\r\n                About\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  branding: 'My App'\r\n};\r\n\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\nconst TextInputGroup = ({\r\n  label,\r\n  name,\r\n  value,\r\n  placeholder,\r\n  type,\r\n  onChange,\r\n  error\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        type={type}\r\n        name={name}\r\n        className={classnames('form-control form-control-lg', {\r\n          'is-invalid': error\r\n        })}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      {error && <div className=\"invalid-feedback\">This is wrong.</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n  type: 'text'\r\n};\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../../Context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\n// import uuid from 'uuid';\r\nimport axios from 'axios';\r\n\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    errors: {}\r\n  };\r\n\r\n  onChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n    // Check form error\r\n    if (name === '') {\r\n      this.setState({ errors: { name: 'Name is required' } });\r\n      return;\r\n    }\r\n    if (email === '') {\r\n      this.setState({ errors: { email: 'Email is required' } });\r\n      return;\r\n    }\r\n    if (phone === '') {\r\n      this.setState({ errors: { phone: 'Name is required' } });\r\n      return;\r\n    }\r\n\r\n    // Add Form\r\n    const newContact = {\r\n      // id: uuid(),\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n\r\n    const res = await axios.post(\r\n      'https://jsonplaceholder.typicode.com/users',\r\n      newContact\r\n    );\r\n    dispatch({\r\n      type: 'ADD_CONTACT',\r\n      payload: res.data\r\n    });\r\n\r\n    // Clear State\r\n    this.setState({\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n      errors: {}\r\n    });\r\n\r\n    // Redirect\r\n    this.props.history.push('/');\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Add Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Enter Email\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Add Contact\"\r\n                    className=\"btn btn-block btn-success\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContact;\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../../Context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\n// import uuid from 'uuid';\r\nimport axios from 'axios';\r\n\r\nclass EditContact extends Component {\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    errors: {}\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.get(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`\r\n    );\r\n    const contact = res.data;\r\n    this.setState(() => ({\r\n      name: contact.name,\r\n      phone: contact.phone,\r\n      email: contact.email\r\n    }));\r\n  }\r\n\r\n  onChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n    // Check form error\r\n    if (name === '') {\r\n      this.setState({ errors: { name: 'Name is required' } });\r\n      return;\r\n    }\r\n    if (email === '') {\r\n      this.setState({ errors: { email: 'Email is required' } });\r\n      return;\r\n    }\r\n    if (phone === '') {\r\n      this.setState({ errors: { phone: 'Name is required' } });\r\n      return;\r\n    }\r\n\r\n    // Put\r\n    const updatedContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.put(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`,\r\n      updatedContact\r\n    );\r\n\r\n    dispatch({ type: 'UPDATE_CONTACT', payload: res.data });\r\n\r\n    // Clear State\r\n    this.setState({\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n      errors: {}\r\n    });\r\n\r\n    // Redirect\r\n    this.props.history.push('/');\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Edit Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Enter Email\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Update Contact\"\r\n                    className=\"btn btn-block btn-success\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditContact;\r\n","import React from 'react';\r\n\r\nexport default function About() {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">About Contact Manager</h1>\r\n      <p className=\"lead\">Simple app to manage contacts</p>\r\n      <p className=\"text-secondary\">Version 1.0.0</p>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nimport NotFound from './components/pages/NotFound';\nimport Contacts from './components/contacts/Contacts';\nimport Header from './components/layout/Header';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport About from './components/pages/About';\nimport { Provider } from './Context';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route path=\"/about\" component={About} />\n                <Route path=\"/contact/add\" component={AddContact} />\n                <Route path=\"/contact/edit/:id\" component={EditContact} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}